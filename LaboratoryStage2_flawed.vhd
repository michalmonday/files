---------------------------------------------------
-- Sheet: Laboratory Stage 2
-- RefDes: 
-- Part Number: XC7A35T
-- Generated By: Multisim
--
-- Author: mb19424
-- Date: Thursday, November 07 13:15:59, 2019
---------------------------------------------------

---------------------------------------------------
-- Use: This file defines the top-level of the design
-- Use with the exported package file
---------------------------------------------------
library ieee;
use ieee.std_logic_1164.ALL;
use ieee.numeric_std.ALL;



library work;
use work.LaboratoryStage2_pkg.ALL;


entity LaboratoryStage2 is
	port (

		VGAHSYNC : out std_logic;
		VGAVSYNC : out std_logic;
		JB0 : out std_logic;
		JB1 : out std_logic;
		CLK : in std_logic;
		JB2 : out std_logic
	);
end LaboratoryStage2;

architecture behavioral of LaboratoryStage2 is


	component AND4_NI
		port (
    D : in STD_LOGIC := 'X';
    C : in STD_LOGIC := 'X';
    B : in STD_LOGIC := 'X';
    A : in STD_LOGIC := 'X';
    Y : out STD_LOGIC := 'U'
  );
	end component;

	component AUTO_IBUF
		port(
		I : in std_logic;
		O : out std_logic
	);
	end component;

	component AUTO_OBUF
		port(
		I : in std_logic;
		O : out std_logic
	);
	end component;

	component BUF_NI
		port (
    A : in STD_LOGIC := 'X';
    Y : out STD_LOGIC := 'U'
  );
	end component;

	component CNTR_4BIN_S_NI
		port( 
  LOAD: in STD_LOGIC;
  CLR: in STD_LOGIC;
  ENP: in STD_LOGIC; 
  ENT: in STD_LOGIC;
  CLK: in STD_LOGIC;
  A :in STD_LOGIC;
  B :in STD_LOGIC;
  C :in STD_LOGIC;
  D :in STD_LOGIC;
  RCO : out STD_LOGIC;
  QA : out STD_LOGIC;
  QB : out STD_LOGIC;
  QC : out STD_LOGIC;
  QD : out STD_LOGIC
 );
	end component;

	component CNTR_7BIN_NI
		Port ( 
   MR : in  STD_LOGIC;
   CP : in  STD_LOGIC;
   Q1 : out  STD_LOGIC;
   Q2 : out  STD_LOGIC;
   Q3 : out  STD_LOGIC;
   Q4 : out  STD_LOGIC;
   Q5 : out  STD_LOGIC;
   Q6 : out  STD_LOGIC;
   Q7 : out  STD_LOGIC
 );
	end component;

	component CNTR_BCD_S_NI
		port( 
  LOAD: in std_logic;
  CLR: in std_logic;
  ENP: in std_logic; 
  ENT: in std_logic;
  CLK: in std_logic;
  A:in STD_LOGIC;
  B:in STD_LOGIC;
  C:in STD_LOGIC;
  D:in STD_LOGIC;
  RCO: out STD_LOGIC;
  QA: out STD_LOGIC;
  QB: out STD_LOGIC;
  QC: out STD_LOGIC;
  QD: out STD_LOGIC
 );
	end component;

	component COMP_4_NI
		port (
   B3 : in STD_LOGIC := 'X';
   B2 : in STD_LOGIC := 'X';
   B1 : in STD_LOGIC := 'X';
   B0 : in STD_LOGIC := 'X';
   A3 : in STD_LOGIC := 'X';
   A2 : in STD_LOGIC := 'X';
   A1 : in STD_LOGIC := 'X';
   A0 : in STD_LOGIC := 'X';
   AGTB : in STD_LOGIC := 'X';
   AEQB : in STD_LOGIC := 'X';
   ALTB : in STD_LOGIC := 'X';
   OAGTB : out STD_LOGIC := 'U';
   OAEQB : out STD_LOGIC := 'U';
   OALTB : out STD_LOGIC := 'U'
    );
	end component;

	component DIGITAL_HIGH_NI
		Port ( 
  Y : out  STD_LOGIC:='1'
 );
	end component;

	component DIGITAL_LOW_NI
		Port ( 
  Y : out  STD_LOGIC:='0'
 );
	end component;

	component FF_D_CO_NI
		Port ( D : in  STD_LOGIC;
           CLK : in  STD_LOGIC;
           Q : out  STD_LOGIC;
           Qneg : out  STD_LOGIC);
	end component;

	component FF_JK_PSCLR_CO_NI
		port (
   J: in STD_LOGIC;
   K: in STD_LOGIC;
   CLK : in STD_LOGIC;  
   PR: in STD_LOGIC;
   CLR: in STD_LOGIC;
   Q : out STD_LOGIC;
   Qneg : out STD_LOGIC
);
	end component;
   
	component OR2_NI
		port (
    B : in STD_LOGIC := 'X';
    A : in STD_LOGIC := 'X';
    Y : out STD_LOGIC := 'U'
  );
	end component;
	signal \1\ : std_logic;
	signal \PLD1/CLOCK\ : std_logic;
	signal \PLD14/HSYNC\ : std_logic;
	signal \PLD14/VCOUNT_7\ : std_logic;
	signal \PLD14/HCOUNT_3\ : std_logic;
	signal \PLD14/VCOUNT_8\ : std_logic;
	signal \PLD1/CLOCK_B\ : std_logic;
	signal \PLD14/CLK\ : std_logic;
	signal \PLD14/BLANK\ : std_logic;
	signal \14\ : std_logic;
	signal \PLD14/HCOUNT_9\ : std_logic;
	signal \13\ : std_logic;
	signal \16\ : std_logic;
	signal \PLD14/VCOUNT_3\ : std_logic;
	signal \PLD14/VSYNC\ : std_logic;
	signal \PLD14/HCOUNT_5\ : std_logic;
	signal \PLD14/VCOUNT_4\ : std_logic;
	signal \PLD14/HCOUNT_7\ : std_logic;
	signal \PLD14/VCOUNT_9\ : std_logic;
	signal \PLD14/VCOUNT_1\ : std_logic;
	signal \15\ : std_logic;
	signal \PLD14/HCOUNT_1\ : std_logic;
	signal \PLD14/HCOUNT_10\ : std_logic;
	signal \PLD14/VCOUNT_6\ : std_logic;
	signal \PLD14/HCOUNT_2\ : std_logic;
	signal \PLD14/HCOUNT_6\ : std_logic;
	signal \12\ : std_logic;
	signal \PLD14/HCOUNT_4\ : std_logic;
	signal \PLD14/HCOUNT_8\ : std_logic;
	signal \PLD14/VCOUNT_5\ : std_logic;
	signal \PLD14/VCOUNT_2\ : std_logic;
	signal \PLD1/CLOCK_C\ : std_logic;
	signal \PLD2/H_BLANK\ : std_logic;
	signal \PLD2/Line_completed\ : std_logic;
	signal \PLD13/V_BLANK\ : std_logic;
	signal \18\ : std_logic;
	signal \17\ : std_logic;
	signal \PLD11/B3\ : std_logic;
	signal \PLD8/B1\ : std_logic;
	signal \PLD10/B1\ : std_logic;
	signal \PLD12/B2\ : std_logic;
	signal \PLD8/B6\ : std_logic;
	signal \PLD12/AEQB\ : std_logic;
	signal \PLD11/B1\ : std_logic;
	signal \PLD10/B2\ : std_logic;
	signal \PLD9/MR\ : std_logic;
	signal \PLD8/OAEQB\ : std_logic;
	signal \PLD11/OAEQB\ : std_logic;
	signal \26\ : std_logic;
	signal \29\ : std_logic;
	signal \27\ : std_logic;
	signal \PLD12/OAEQB\ : std_logic;
	signal \PLD10/OAEQB\ : std_logic;
	signal \3\ : std_logic;
	signal \2\ : std_logic;
	signal \8\ : std_logic;
	signal \6\ : std_logic;
	signal \9\ : std_logic;
	signal \4\ : std_logic;
	signal \10\ : std_logic;
	signal \7\ : std_logic;
	signal \5\ : std_logic;
	signal \11\ : std_logic;
	signal \PLD7/B1\ : std_logic;
	signal \PLD7/OAEQB\ : std_logic;
	signal \PLD6/B1\ : std_logic;
	signal \PLD3/A5\ : std_logic;
	signal \PLD3/A2\ : std_logic;
	signal \PLD3/A8\ : std_logic;
	signal \21\ : std_logic;
	signal \PLD3/A6\ : std_logic;
	signal \PLD3/A10\ : std_logic;
	signal \PLD6/B5\ : std_logic;
	signal \PLD3/A1\ : std_logic;
	signal \PLD3/A3\ : std_logic;
	signal \PLD3/B1\ : std_logic;
	signal \PLD7/AEQB\ : std_logic;
	signal \PLD5/B5\ : std_logic;
	signal \PLD3/OAEQB\ : std_logic;
	signal \PLD3/A7\ : std_logic;
	signal \PLD5/B1\ : std_logic;
	signal \PLD4/MR\ : std_logic;
	signal \PLD3/B8\ : std_logic;
	signal \PLD3/A9\ : std_logic;
	signal \PLD7/OAGTB\ : std_logic;
	signal \PLD3/A4\ : std_logic;
	signal \22\ : std_logic;
	signal \PLD6/OAGTB\ : std_logic;
	signal \PLD5/OAEQB\ : std_logic;
	signal \20\ : std_logic;
	signal \19\ : std_logic;
	signal \PLD7/OALTB\ : std_logic;
	signal \PLD6/OALTB\ : std_logic;
	signal \PLD3/OALTB\ : std_logic;
	signal \PLD3/OAGTB\ : std_logic;
	signal \PLD5/OAGTB\ : std_logic;
	signal \PLD6/OAEQB\ : std_logic;
	signal \23\ : std_logic;
	signal \PLD5/OALTB\ : std_logic;
	signal \PLD8/OAGTB\ : std_logic;
	signal \69\ : std_logic;
	signal \PLD8/OALTB\ : std_logic;
	signal \64\ : std_logic;
	signal \PLD8/A10\ : std_logic;
	signal \65\ : std_logic;
	signal \63\ : std_logic;
	signal \66\ : std_logic;
	signal \68\ : std_logic;
	signal \67\ : std_logic;
	signal \PLD11/OAGTB\ : std_logic;
	signal \85\ : std_logic;
	signal \PLD11/OALTB\ : std_logic;
	signal \80\ : std_logic;
	signal \81\ : std_logic;
	signal \79\ : std_logic;
	signal \82\ : std_logic;
	signal \84\ : std_logic;
	signal \83\ : std_logic;
	signal \PLD12/OAGTB\ : std_logic;
	signal \92\ : std_logic;
	signal \PLD12/OALTB\ : std_logic;
	signal \87\ : std_logic;
	signal \88\ : std_logic;
	signal \86\ : std_logic;
	signal \89\ : std_logic;
	signal \91\ : std_logic;
	signal \90\ : std_logic;
	signal \62\ : std_logic;
	signal \57\ : std_logic;
	signal \58\ : std_logic;
	signal \56\ : std_logic;
	signal \59\ : std_logic;
	signal \61\ : std_logic;
	signal \60\ : std_logic;
	signal \48\ : std_logic;
	signal \43\ : std_logic;
	signal \44\ : std_logic;
	signal \42\ : std_logic;
	signal \45\ : std_logic;
	signal \47\ : std_logic;
	signal \46\ : std_logic;
	signal \39\ : std_logic;
	signal \34\ : std_logic;
	signal \35\ : std_logic;
	signal \33\ : std_logic;
	signal \36\ : std_logic;
	signal \38\ : std_logic;
	signal \37\ : std_logic;
	signal \PLD10/OAGTB\ : std_logic;
	signal \78\ : std_logic;
	signal \PLD10/OALTB\ : std_logic;
	signal \73\ : std_logic;
	signal \74\ : std_logic;
	signal \72\ : std_logic;
	signal \75\ : std_logic;
	signal \77\ : std_logic;
	signal \76\ : std_logic;
	signal \55\ : std_logic;
	signal \50\ : std_logic;
	signal \51\ : std_logic;
	signal \49\ : std_logic;
	signal \52\ : std_logic;
	signal \54\ : std_logic;
	signal \53\ : std_logic;
	signal \70\ : std_logic;
	signal \71\ : std_logic;
	signal \40\ : std_logic;
	signal \41\ : std_logic;
begin
	VGAHSYNC_AUTOBUF : AUTO_OBUF
		port map( I => \13\, O => VGAHSYNC );
	VGAVSYNC_AUTOBUF : AUTO_OBUF
		port map( I => \12\, O => VGAVSYNC );
	JB0_AUTOBUF : AUTO_OBUF
		port map( I => \15\, O => JB0 );
	JB1_AUTOBUF : AUTO_OBUF
		port map( I => \14\, O => JB1 );
	CLK_AUTOBUF : AUTO_IBUF
		port map( I => CLK, O => \PLD1/CLOCK\ );
	JB2_AUTOBUF : AUTO_OBUF
		port map( I => \16\, O => JB2 );
	U13 : BUF_NI
		port map( Y => \12\, A => \PLD14/VSYNC\ );
	U15 : BUF_NI
		port map( Y => \13\, A => \PLD14/HSYNC\ );
	U16 : BUF_NI
		port map( Y => \15\, A => \PLD14/HSYNC\ );
	U17 : BUF_NI
		port map( Y => \14\, A => \PLD14/VSYNC\ );
	U14 : BUF_NI
		port map( Y => \16\, A => \PLD14/BLANK\ );
	U80 : OR2_NI
		port map( A => \18\, B => \17\, Y => \PLD14/BLANK\ );
	U18 : BUF_NI
		port map( Y => \17\, A => \PLD2/H_BLANK\ );
	U47 : BUF_NI
		port map( Y => \18\, A => \PLD13/V_BLANK\ );
	U1 : CNTR_4BIN_S_NI
		port map( QA => open, QB => \PLD14/CLK\, QC => open, QD => open, RCO => open, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \PLD1/CLOCK\ );
	U2 : DIGITAL_HIGH_NI
		port map( Y => \1\ );
	U3 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \2\, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \PLD1/CLOCK\ );
	U4 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \3\, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \2\ );
	U5 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \4\, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \3\ );
	U6 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \5\, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \4\ );
	U7 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \6\, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \5\ );
	U8 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \7\, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \6\ );
	U9 : FF_D_CO_NI
		port map( D => \8\, Q => \PLD1/CLOCK_B\, CLK => \6\, Qneg => \8\ );
	U10 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \9\, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \7\ );
	U11 : CNTR_BCD_S_NI
		port map( QA => open, QB => open, QC => open, QD => open, RCO => \10\, A => \1\, B => \1\, C => \1\, D => \1\, ENP => \1\, ENT => \1\, LOAD => \1\, CLR => \1\, CLK => \9\ );
	U12 : FF_D_CO_NI
		port map( D => \11\, Q => \PLD1/CLOCK_C\, CLK => \10\, Qneg => \11\ );
	U19 : FF_JK_PSCLR_CO_NI
		port map( J => \22\, Q => \PLD14/HSYNC\, Qneg => open, K => \23\, CLR => \21\, CLK => \PLD14/CLK\, PR => \21\ );
	U20 : FF_JK_PSCLR_CO_NI
		port map( J => \19\, Q => \PLD2/H_BLANK\, Qneg => open, K => \20\, CLR => \21\, CLK => \PLD14/CLK\, PR => \21\ );
	U21 : AND4_NI
		port map( A => \PLD3/A10\, B => \PLD3/A9\, C => \PLD3/A6\, D => \PLD3/A1\, Y => \PLD4/MR\ );
	U22 : DIGITAL_HIGH_NI
		port map( Y => \PLD3/B8\ );
	U23 : DIGITAL_LOW_NI
		port map( Y => \PLD3/B1\ );
	U24 : DIGITAL_HIGH_NI
		port map( Y => \PLD5/B5\ );
	U25 : DIGITAL_LOW_NI
		port map( Y => \PLD5/B1\ );
	U26 : DIGITAL_HIGH_NI
		port map( Y => \PLD6/B5\ );
	U27 : DIGITAL_LOW_NI
		port map( Y => \PLD6/B1\ );
	U28 : DIGITAL_HIGH_NI
		port map( Y => \PLD7/AEQB\ );
	U29 : DIGITAL_LOW_NI
		port map( Y => \PLD7/B1\ );
	U59 : BUF_NI
		port map( Y => \PLD2/Line_completed\, A => \PLD7/OAEQB\ );
	U60 : BUF_NI
		port map( Y => \22\, A => \PLD6/OAEQB\ );
	U61 : BUF_NI
		port map( Y => \23\, A => \PLD5/OAEQB\ );
	U30 : BUF_NI
		port map( Y => \19\, A => \PLD3/OAEQB\ );
	U64 : BUF_NI
		port map( Y => \20\, A => \PLD7/OAEQB\ );
	U31 : BUF_NI
		port map( Y => \PLD14/HCOUNT_1\, A => \PLD3/A1\ );
	U32 : BUF_NI
		port map( Y => \PLD14/HCOUNT_2\, A => \PLD3/A2\ );
	U33 : BUF_NI
		port map( Y => \PLD14/HCOUNT_3\, A => \PLD3/A3\ );
	U34 : BUF_NI
		port map( Y => \PLD14/HCOUNT_4\, A => \PLD3/A4\ );
	U35 : BUF_NI
		port map( Y => \PLD14/HCOUNT_5\, A => \PLD3/A5\ );
	U36 : BUF_NI
		port map( Y => \PLD14/HCOUNT_6\, A => \PLD3/A6\ );
	U37 : BUF_NI
		port map( Y => \PLD14/HCOUNT_7\, A => \PLD3/A7\ );
	U38 : BUF_NI
		port map( Y => \PLD14/HCOUNT_8\, A => \PLD3/A8\ );
	U39 : BUF_NI
		port map( Y => \PLD14/HCOUNT_9\, A => \PLD3/A9\ );
	U40 : BUF_NI
		port map( Y => \PLD14/HCOUNT_10\, A => \PLD3/A10\ );
	U45 : DIGITAL_HIGH_NI
		port map( Y => \21\ );
	U41 : FF_JK_PSCLR_CO_NI
		port map( J => \26\, Q => \PLD14/VSYNC\, Qneg => open, K => \27\, CLR => \PLD12/AEQB\, CLK => \PLD2/Line_completed\, PR => \PLD12/AEQB\ );
	U42 : FF_JK_PSCLR_CO_NI
		port map( J => \29\, Q => \PLD13/V_BLANK\, Qneg => open, K => \PLD12/OAEQB\, CLR => \PLD12/AEQB\, CLK => \PLD2/Line_completed\, PR => \PLD12/AEQB\ );
	U43 : AND4_NI
		port map( A => \PLD8/A10\, B => \PLD14/VCOUNT_4\, C => \PLD14/VCOUNT_3\, D => \PLD14/VCOUNT_2\, Y => \PLD9/MR\ );
	U44 : DIGITAL_HIGH_NI
		port map( Y => \PLD8/B6\ );
	U46 : DIGITAL_LOW_NI
		port map( Y => \PLD8/B1\ );
	U48 : DIGITAL_HIGH_NI
		port map( Y => \PLD10/B2\ );
	U49 : DIGITAL_LOW_NI
		port map( Y => \PLD10/B1\ );
	U50 : DIGITAL_HIGH_NI
		port map( Y => \PLD11/B3\ );
	U76 : DIGITAL_LOW_NI
		port map( Y => \PLD11/B1\ );
	U77 : DIGITAL_HIGH_NI
		port map( Y => \PLD12/AEQB\ );
	U78 : DIGITAL_LOW_NI
		port map( Y => \PLD12/B2\ );
	U79 : BUF_NI
		port map( Y => \29\, A => \PLD8/OAEQB\ );
	U81 : BUF_NI
		port map( Y => \27\, A => \PLD10/OAEQB\ );
	U82 : BUF_NI
		port map( Y => \26\, A => \PLD11/OAEQB\ );
	U51 : COMP_4_NI
		port map( A2 => \PLD3/A3\, B2 => \PLD3/B1\, A1 => \PLD3/A2\, B1 => \PLD3/B1\, OAGTB => \33\, A0 => \PLD3/A1\, B0 => \PLD3/B1\, A3 => \PLD3/A4\, B3 => \PLD3/B1\, OAEQB => \34\, OALTB => \35\, AEQB => \PLD3/B8\, ALTB => \PLD3/B1\, AGTB => \PLD3/B1\ );
	U52 : COMP_4_NI
		port map( A2 => \PLD3/A7\, B2 => \PLD3/B1\, A1 => \PLD3/A6\, B1 => \PLD3/B1\, OAGTB => \36\, A0 => \PLD3/A5\, B0 => \PLD3/B1\, A3 => \PLD3/A8\, B3 => \PLD3/B8\, OAEQB => \37\, OALTB => \38\, AEQB => \34\, ALTB => \35\, AGTB => \33\ );
	U53 : COMP_4_NI
		port map( A2 => \39\, B2 => \39\, A1 => \PLD3/A10\, B1 => \PLD3/B8\, OAGTB => \PLD3/OAGTB\, A0 => \PLD3/A9\, B0 => \PLD3/B1\, A3 => \39\, B3 => \39\, OAEQB => \PLD3/OAEQB\, OALTB => \PLD3/OALTB\, AEQB => \37\, ALTB => \38\, AGTB => \36\ );
	U54 : DIGITAL_LOW_NI
		port map( Y => \39\ );
	U55 : CNTR_7BIN_NI
		port map( Q1 => \PLD3/A1\, Q2 => \PLD3/A2\, Q3 => \PLD3/A3\, Q4 => \PLD3/A4\, Q5 => \PLD3/A5\, MR => \PLD4/MR\, CP => \PLD14/CLK\, Q6 => \PLD3/A6\, Q7 => \PLD3/A7\ );
	U56 : CNTR_7BIN_NI
		port map( Q1 => \PLD3/A8\, Q2 => \PLD3/A9\, Q3 => \PLD3/A10\, Q4 => open, Q5 => open, MR => \40\, CP => \41\, Q6 => open, Q7 => open );
	U57 : BUF_NI
		port map( Y => \40\, A => \PLD4/MR\ );
	U58 : BUF_NI
		port map( Y => \41\, A => \PLD3/A7\ );
	U62 : COMP_4_NI
		port map( A2 => \PLD3/A3\, B2 => \PLD5/B1\, A1 => \PLD3/A2\, B1 => \PLD5/B1\, OAGTB => \42\, A0 => \PLD3/A1\, B0 => \PLD5/B1\, A3 => \PLD3/A4\, B3 => \PLD5/B1\, OAEQB => \43\, OALTB => \44\, AEQB => \PLD5/B5\, ALTB => \PLD5/B1\, AGTB => \PLD5/B1\ );
	U63 : COMP_4_NI
		port map( A2 => \PLD3/A7\, B2 => \PLD5/B1\, A1 => \PLD3/A6\, B1 => \PLD5/B1\, OAGTB => \45\, A0 => \PLD3/A5\, B0 => \PLD5/B5\, A3 => \PLD3/A8\, B3 => \PLD5/B5\, OAEQB => \46\, OALTB => \47\, AEQB => \43\, ALTB => \44\, AGTB => \42\ );
	U65 : COMP_4_NI
		port map( A2 => \48\, B2 => \48\, A1 => \PLD3/A10\, B1 => \PLD5/B5\, OAGTB => \PLD5/OAGTB\, A0 => \PLD3/A9\, B0 => \PLD5/B1\, A3 => \48\, B3 => \48\, OAEQB => \PLD5/OAEQB\, OALTB => \PLD5/OALTB\, AEQB => \46\, ALTB => \47\, AGTB => \45\ );
	U66 : DIGITAL_LOW_NI
		port map( Y => \48\ );
	U67 : COMP_4_NI
		port map( A2 => \PLD3/A3\, B2 => \PLD6/B1\, A1 => \PLD3/A2\, B1 => \PLD6/B1\, OAGTB => \49\, A0 => \PLD3/A1\, B0 => \PLD6/B1\, A3 => \PLD3/A4\, B3 => \PLD6/B1\, OAEQB => \50\, OALTB => \51\, AEQB => \PLD6/B5\, ALTB => \PLD6/B1\, AGTB => \PLD6/B1\ );
	U68 : COMP_4_NI
		port map( A2 => \PLD3/A7\, B2 => \PLD6/B5\, A1 => \PLD3/A6\, B1 => \PLD6/B5\, OAGTB => \52\, A0 => \PLD3/A5\, B0 => \PLD6/B5\, A3 => \PLD3/A8\, B3 => \PLD6/B5\, OAEQB => \53\, OALTB => \54\, AEQB => \50\, ALTB => \51\, AGTB => \49\ );
	U69 : COMP_4_NI
		port map( A2 => \55\, B2 => \55\, A1 => \PLD3/A10\, B1 => \PLD6/B5\, OAGTB => \PLD6/OAGTB\, A0 => \PLD3/A9\, B0 => \PLD6/B1\, A3 => \55\, B3 => \55\, OAEQB => \PLD6/OAEQB\, OALTB => \PLD6/OALTB\, AEQB => \53\, ALTB => \54\, AGTB => \52\ );
	U70 : DIGITAL_LOW_NI
		port map( Y => \55\ );
	U71 : COMP_4_NI
		port map( A2 => \PLD3/A3\, B2 => \PLD7/B1\, A1 => \PLD3/A2\, B1 => \PLD7/B1\, OAGTB => \56\, A0 => \PLD3/A1\, B0 => \PLD7/B1\, A3 => \PLD3/A4\, B3 => \PLD7/B1\, OAEQB => \57\, OALTB => \58\, AEQB => \PLD7/AEQB\, ALTB => \PLD7/B1\, AGTB => \PLD7/B1\ );
	U72 : COMP_4_NI
		port map( A2 => \PLD3/A7\, B2 => \PLD7/B1\, A1 => \PLD3/A6\, B1 => \PLD7/AEQB\, OAGTB => \59\, A0 => \PLD3/A5\, B0 => \PLD7/B1\, A3 => \PLD3/A8\, B3 => \PLD7/B1\, OAEQB => \60\, OALTB => \61\, AEQB => \57\, ALTB => \58\, AGTB => \56\ );
	U73 : COMP_4_NI
		port map( A2 => \62\, B2 => \62\, A1 => \PLD3/A10\, B1 => \PLD7/AEQB\, OAGTB => \PLD7/OAGTB\, A0 => \PLD3/A9\, B0 => \PLD7/AEQB\, A3 => \62\, B3 => \62\, OAEQB => \PLD7/OAEQB\, OALTB => \PLD7/OALTB\, AEQB => \60\, ALTB => \61\, AGTB => \59\ );
	U74 : DIGITAL_LOW_NI
		port map( Y => \62\ );
	U75 : COMP_4_NI
		port map( A2 => \PLD14/VCOUNT_3\, B2 => \PLD8/B1\, A1 => \PLD14/VCOUNT_2\, B1 => \PLD8/B1\, OAGTB => \63\, A0 => \PLD14/VCOUNT_1\, B0 => \PLD8/B1\, A3 => \PLD14/VCOUNT_4\, B3 => \PLD8/B1\, OAEQB => \64\, OALTB => \65\, AEQB => \PLD8/B6\, ALTB => \PLD8/B1\, AGTB => \PLD8/B1\ );
	U83 : COMP_4_NI
		port map( A2 => \PLD14/VCOUNT_7\, B2 => \PLD8/B6\, A1 => \PLD14/VCOUNT_6\, B1 => \PLD8/B6\, OAGTB => \66\, A0 => \PLD14/VCOUNT_5\, B0 => \PLD8/B1\, A3 => \PLD14/VCOUNT_8\, B3 => \PLD8/B6\, OAEQB => \67\, OALTB => \68\, AEQB => \64\, ALTB => \65\, AGTB => \63\ );
	U84 : COMP_4_NI
		port map( A2 => \69\, B2 => \69\, A1 => \PLD8/A10\, B1 => \PLD8/B1\, OAGTB => \PLD8/OAGTB\, A0 => \PLD14/VCOUNT_9\, B0 => \PLD8/B6\, A3 => \69\, B3 => \69\, OAEQB => \PLD8/OAEQB\, OALTB => \PLD8/OALTB\, AEQB => \67\, ALTB => \68\, AGTB => \66\ );
	U85 : DIGITAL_LOW_NI
		port map( Y => \69\ );
	U86 : CNTR_7BIN_NI
		port map( Q1 => \PLD14/VCOUNT_1\, Q2 => \PLD14/VCOUNT_2\, Q3 => \PLD14/VCOUNT_3\, Q4 => \PLD14/VCOUNT_4\, Q5 => \PLD14/VCOUNT_5\, MR => \PLD9/MR\, CP => \PLD2/Line_completed\, Q6 => \PLD14/VCOUNT_6\, Q7 => \PLD14/VCOUNT_7\ );
	U87 : CNTR_7BIN_NI
		port map( Q1 => \PLD14/VCOUNT_8\, Q2 => \PLD14/VCOUNT_9\, Q3 => \PLD8/A10\, Q4 => open, Q5 => open, MR => \70\, CP => \71\, Q6 => open, Q7 => open );
	U88 : BUF_NI
		port map( Y => \70\, A => \PLD9/MR\ );
	U89 : BUF_NI
		port map( Y => \71\, A => \PLD14/VCOUNT_7\ );
	U90 : COMP_4_NI
		port map( A2 => \PLD14/VCOUNT_3\, B2 => \PLD10/B1\, A1 => \PLD14/VCOUNT_2\, B1 => \PLD10/B2\, OAGTB => \72\, A0 => \PLD14/VCOUNT_1\, B0 => \PLD10/B1\, A3 => \PLD14/VCOUNT_4\, B3 => \PLD10/B2\, OAEQB => \73\, OALTB => \74\, AEQB => \PLD10/B2\, ALTB => \PLD10/B1\, AGTB => \PLD10/B1\ );
	U91 : COMP_4_NI
		port map( A2 => \PLD14/VCOUNT_7\, B2 => \PLD10/B2\, A1 => \PLD14/VCOUNT_6\, B1 => \PLD10/B2\, OAGTB => \75\, A0 => \PLD14/VCOUNT_5\, B0 => \PLD10/B1\, A3 => \PLD14/VCOUNT_8\, B3 => \PLD10/B2\, OAEQB => \76\, OALTB => \77\, AEQB => \73\, ALTB => \74\, AGTB => \72\ );
	U92 : COMP_4_NI
		port map( A2 => \78\, B2 => \78\, A1 => \PLD8/A10\, B1 => \PLD10/B1\, OAGTB => \PLD10/OAGTB\, A0 => \PLD14/VCOUNT_9\, B0 => \PLD10/B2\, A3 => \78\, B3 => \78\, OAEQB => \PLD10/OAEQB\, OALTB => \PLD10/OALTB\, AEQB => \76\, ALTB => \77\, AGTB => \75\ );
	U93 : DIGITAL_LOW_NI
		port map( Y => \78\ );
	U94 : COMP_4_NI
		port map( A2 => \PLD14/VCOUNT_3\, B2 => \PLD11/B3\, A1 => \PLD14/VCOUNT_2\, B1 => \PLD11/B1\, OAGTB => \79\, A0 => \PLD14/VCOUNT_1\, B0 => \PLD11/B1\, A3 => \PLD14/VCOUNT_4\, B3 => \PLD11/B3\, OAEQB => \80\, OALTB => \81\, AEQB => \PLD11/B3\, ALTB => \PLD11/B1\, AGTB => \PLD11/B1\ );
	U95 : COMP_4_NI
		port map( A2 => \PLD14/VCOUNT_7\, B2 => \PLD11/B3\, A1 => \PLD14/VCOUNT_6\, B1 => \PLD11/B3\, OAGTB => \82\, A0 => \PLD14/VCOUNT_5\, B0 => \PLD11/B1\, A3 => \PLD14/VCOUNT_8\, B3 => \PLD11/B3\, OAEQB => \83\, OALTB => \84\, AEQB => \80\, ALTB => \81\, AGTB => \79\ );
	U96 : COMP_4_NI
		port map( A2 => \85\, B2 => \85\, A1 => \PLD8/A10\, B1 => \PLD11/B1\, OAGTB => \PLD11/OAGTB\, A0 => \PLD14/VCOUNT_9\, B0 => \PLD11/B3\, A3 => \85\, B3 => \85\, OAEQB => \PLD11/OAEQB\, OALTB => \PLD11/OALTB\, AEQB => \83\, ALTB => \84\, AGTB => \82\ );
	U97 : DIGITAL_LOW_NI
		port map( Y => \85\ );
	U102 : COMP_4_NI
		port map( A2 => \PLD14/VCOUNT_3\, B2 => \PLD12/AEQB\, A1 => \PLD14/VCOUNT_2\, B1 => \PLD12/B2\, OAGTB => \86\, A0 => \PLD14/VCOUNT_1\, B0 => \PLD12/AEQB\, A3 => \PLD14/VCOUNT_4\, B3 => \PLD12/AEQB\, OAEQB => \87\, OALTB => \88\, AEQB => \PLD12/AEQB\, ALTB => \PLD12/B2\, AGTB => \PLD12/B2\ );
	U99 : COMP_4_NI
		port map( A2 => \PLD14/VCOUNT_7\, B2 => \PLD12/B2\, A1 => \PLD14/VCOUNT_6\, B1 => \PLD12/B2\, OAGTB => \89\, A0 => \PLD14/VCOUNT_5\, B0 => \PLD12/B2\, A3 => \PLD14/VCOUNT_8\, B3 => \PLD12/B2\, OAEQB => \90\, OALTB => \91\, AEQB => \87\, ALTB => \88\, AGTB => \86\ );
	U100 : COMP_4_NI
		port map( A2 => \92\, B2 => \92\, A1 => \PLD8/A10\, B1 => \PLD12/AEQB\, OAGTB => \PLD12/OAGTB\, A0 => \PLD14/VCOUNT_9\, B0 => \PLD12/B2\, A3 => \92\, B3 => \92\, OAEQB => \PLD12/OAEQB\, OALTB => \PLD12/OALTB\, AEQB => \90\, ALTB => \91\, AGTB => \89\ );
	U101 : DIGITAL_LOW_NI
		port map( Y => \92\ );
end behavioral;
